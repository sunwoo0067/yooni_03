# 고성능 운영환경용 Nginx 설정
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# 이벤트 블록 - 연결 처리 최적화
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME 타입 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 로그 형식 정의
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json_logs escape=json
        '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request_method":"$request_method",'
        '"request_uri":"$request_uri",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"upstream_response_time":"$upstream_response_time",'
        '"user_agent":"$http_user_agent",'
        '"referer":"$http_referer"'
        '}';

    access_log /var/log/nginx/access.log json_logs;

    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # 버퍼 크기 설정
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # 타임아웃 설정
    client_header_timeout 30s;
    client_body_timeout 30s;
    send_timeout 30s;
    reset_timedout_connection on;

    # Gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/atom+xml
        application/rss+xml
        application/xhtml+xml
        application/x-font-ttf
        application/font-woff
        application/font-woff2
        font/opentype
        image/svg+xml
        image/x-icon;

    # Brotli 압축 (사용 가능한 경우)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # SSL 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # 업스트림 서버 정의
    upstream backend_servers {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        # 로드 밸런싱을 위한 추가 서버들
        # server backend2:8000 max_fails=3 fail_timeout=30s weight=1;
        # server backend3:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    upstream frontend_servers {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # 캐시 설정
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=500m inactive=1d use_temp_path=off;

    # 지역 차단 (선택사항)
    # geoip2 /usr/share/GeoIP/GeoLite2-Country.mmdb {
    #     $geoip2_data_country_code country iso_code;
    # }
    
    # map $geoip2_data_country_code $blocked_country {
    #     default 0;
    #     CN 1;  # 중국 차단 예시
    #     RU 1;  # 러시아 차단 예시
    # }

    # 봇 차단
    map $http_user_agent $blocked_agent {
        default 0;
        ~*malicious 1;
        ~*bot 0;  # 검색엔진 봇은 허용
        ~*crawler 0;
        ~*spider 0;
        ~*scraper 1;
        ~*scanner 1;
    }

    # 실시간 IP 차단을 위한 맵 (fail2ban과 연동)
    include /etc/nginx/conf.d/blacklist.conf;

    # 추가 설정 파일들 포함
    include /etc/nginx/conf.d/*.conf;
}