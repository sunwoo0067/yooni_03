# Generated by Django 5.1.5 on 2025-07-16 04:23

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SourceData',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('source_type', models.CharField(choices=[('supplier_product', '공급사 상품'), ('market_listing', '마켓 리스팅'), ('order', '주문'), ('inventory', '재고'), ('pricing', '가격'), ('customer', '고객'), ('analytics', '분석')], db_index=True, max_length=50)),
                ('source_id', models.CharField(db_index=True, max_length=100)),
                ('source_system', models.CharField(db_index=True, max_length=50)),
                ('raw_data', models.JSONField(default=dict, help_text='원본 데이터 그대로')),
                ('normalized_data', models.JSONField(default=dict, help_text='정규화된 구조화 데이터')),
                ('market_data', models.JSONField(default=dict, help_text="\n    마켓별 특화 데이터:\n    {\n        'smartstore': {\n            'category_id': '...',\n            'title': '...',\n            'price': 15000,\n            'status': 'active',\n            'listing_id': '...',\n            'last_sync': '2025-01-01T00:00:00Z'\n        },\n        'coupang': {\n            'vendor_item_id': '...',\n            'item_name': '...',\n            'original_price': 15000,\n            'sale_price': 13500,\n            'approval_status': 'approved'\n        },\n        'gmarket': {\n            'goods_no': '...',\n            'goods_nm': '...',\n            'sell_price': 14000,\n            'display_yn': 'Y'\n        }\n    }\n    ")),
                ('ai_data', models.JSONField(default=dict, help_text="\n    AI 처리 결과:\n    {\n        'processed_title': '...',\n        'optimized_description': '...',\n        'extracted_keywords': [...],\n        'category_predictions': {...},\n        'pricing_recommendations': {...},\n        'quality_score': 0.85\n    }\n    ")),
                ('version', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('workflow_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('processing_status', models.CharField(choices=[('raw', '원본'), ('processing', '처리중'), ('processed', '처리완료'), ('error', '오류'), ('archived', '보관됨')], db_index=True, default='raw', max_length=20)),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.BTreeIndex(fields=['source_type', 'source_system'], name='source_data_source__1cb679_btree'), django.contrib.postgres.indexes.BTreeIndex(fields=['source_system', 'source_id'], name='source_data_source__fd0a89_btree'), django.contrib.postgres.indexes.BTreeIndex(fields=['processing_status', 'created_at'], name='source_data_process_397559_btree'), django.contrib.postgres.indexes.BTreeIndex(fields=['workflow_id', 'processing_status'], name='source_data_workflo_8592a0_btree'), django.contrib.postgres.indexes.GinIndex(fields=['raw_data'], name='source_data_raw_dat_a2317a_gin'), django.contrib.postgres.indexes.GinIndex(fields=['normalized_data'], name='source_data_normali_58082e_gin'), django.contrib.postgres.indexes.GinIndex(fields=['market_data'], name='source_data_market__ad50f3_gin'), django.contrib.postgres.indexes.GinIndex(fields=['ai_data'], name='source_data_ai_data_f2e6cf_gin')],
                'unique_together': {('source_system', 'source_id', 'version')},
            },
        ),
        migrations.CreateModel(
            name='DataLineage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transformation_type', models.CharField(max_length=50)),
                ('transformation_metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='source_data.sourcedata')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='source_data.sourcedata')),
            ],
        ),
    ]
