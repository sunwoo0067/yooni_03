# Generated by Django 5.1.5 on 2025-07-16 04:58

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Marketplace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Marketplace name', max_length=255, unique=True)),
                ('code', models.SlugField(help_text='Unique identifier code for the marketplace', unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the marketplace and selling strategy')),
                ('platform_type', models.CharField(choices=[('amazon', 'Amazon'), ('ebay', 'eBay'), ('shopify', 'Shopify'), ('walmart', 'Walmart'), ('etsy', 'Etsy'), ('mercadolibre', 'MercadoLibre'), ('custom', 'Custom Platform')], help_text='Type of marketplace platform', max_length=50)),
                ('api_base_url', models.URLField(blank=True, help_text='Base URL for API connections')),
                ('seller_account_id', models.CharField(blank=True, help_text='Seller/Merchant account ID on the marketplace', max_length=255)),
                ('encrypted_credentials', models.TextField(blank=True, help_text='Encrypted API credentials (API keys, tokens, secrets)')),
                ('connection_settings', models.JSONField(blank=True, default=dict, help_text='Marketplace-specific configuration (region, currency, endpoints)')),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Default commission percentage charged by marketplace', max_digits=5)),
                ('listing_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fee charged per listing (if applicable)', max_digits=10)),
                ('monthly_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly subscription/store fee', max_digits=10)),
                ('fee_structure', models.JSONField(blank=True, default=dict, help_text='Detailed fee structure (category-specific fees, etc.)')),
                ('rate_limit_requests', models.IntegerField(default=100, help_text='Maximum requests per rate limit window')),
                ('rate_limit_window', models.IntegerField(default=3600, help_text='Rate limit window in seconds')),
                ('inventory_sync_enabled', models.BooleanField(default=True, help_text='Enable automatic inventory synchronization')),
                ('inventory_buffer', models.IntegerField(default=0, help_text='Buffer quantity to reserve from actual inventory')),
                ('auto_acknowledge_orders', models.BooleanField(default=False, help_text='Automatically acknowledge new orders')),
                ('order_prefix', models.CharField(blank=True, help_text='Prefix to add to internal order numbers', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('testing', 'Testing'), ('pending', 'Pending Approval')], default='inactive', max_length=20)),
                ('is_auto_sync_enabled', models.BooleanField(default=False, help_text='Enable automatic synchronization')),
                ('sync_frequency_minutes', models.IntegerField(default=60, help_text='Minutes between automatic syncs')),
                ('currency', models.CharField(default='USD', help_text='Default currency for this marketplace', max_length=3)),
                ('country_code', models.CharField(blank=True, help_text='Two-letter country code (e.g., US, UK)', max_length=2)),
                ('language_code', models.CharField(default='en', help_text='Language code for marketplace (e.g., en, es, fr)', max_length=10)),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Last successful synchronization', null=True)),
                ('last_sync_status', models.CharField(blank=True, help_text='Status of the last sync attempt', max_length=50)),
                ('last_sync_error', models.TextField(blank=True, help_text='Error message from last failed sync')),
                ('total_listings', models.IntegerField(default=0, help_text='Total number of active listings')),
                ('total_orders', models.IntegerField(default=0, help_text='Total number of orders received')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total revenue from this marketplace', max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marketplaces_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'marketplaces',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketplace_listing_id', models.CharField(help_text='Listing ID on the marketplace', max_length=255)),
                ('marketplace_sku', models.CharField(help_text='SKU used on the marketplace', max_length=255)),
                ('title', models.CharField(help_text='Listing title on marketplace', max_length=500)),
                ('description', models.TextField(blank=True, help_text='Listing description')),
                ('listing_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('auction', 'Auction'), ('variation', 'Variation/Multi-SKU')], default='fixed', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, help_text='Listing price on marketplace', max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale/promotional price', max_digits=10, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='Cost of goods sold', max_digits=10, null=True)),
                ('quantity_listed', models.IntegerField(default=0, help_text='Quantity available on marketplace')),
                ('quantity_sold', models.IntegerField(default=0, help_text='Total quantity sold')),
                ('marketplace_category_id', models.CharField(blank=True, help_text='Category ID on marketplace', max_length=255)),
                ('marketplace_category_name', models.CharField(blank=True, help_text='Category name on marketplace', max_length=500)),
                ('listing_attributes', models.JSONField(blank=True, default=dict, help_text='Marketplace-specific attributes')),
                ('image_urls', models.JSONField(blank=True, default=list, help_text='List of image URLs for the listing')),
                ('views', models.IntegerField(default=0, help_text='Number of listing views')),
                ('watchers', models.IntegerField(default=0, help_text='Number of watchers (if applicable)')),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Conversion rate percentage', max_digits=5)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('error', 'Error'), ('out_of_stock', 'Out of Stock'), ('ended', 'Ended')], default='pending', max_length=20)),
                ('listing_url', models.URLField(blank=True, help_text='URL to view listing on marketplace')),
                ('listed_at', models.DateTimeField(blank=True, help_text='When the listing went live', null=True)),
                ('ends_at', models.DateTimeField(blank=True, help_text='When the listing ends (for auctions)', null=True)),
                ('last_synced_at', models.DateTimeField(blank=True, help_text='Last sync with marketplace', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Last error message if any')),
                ('error_count', models.IntegerField(default=0, help_text='Number of consecutive errors')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to='marketplaces.marketplace')),
            ],
            options={
                'db_table': 'marketplace_listings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_sku', models.CharField(help_text='Internal product SKU', max_length=255)),
                ('marketplace_sku', models.CharField(help_text='SKU on marketplace', max_length=255)),
                ('available_quantity', models.IntegerField(default=0, help_text='Quantity available for sale')),
                ('reserved_quantity', models.IntegerField(default=0, help_text='Quantity reserved for pending orders')),
                ('marketplace_quantity', models.IntegerField(default=0, help_text='Quantity shown on marketplace')),
                ('buffer_quantity', models.IntegerField(default=0, help_text='Buffer to maintain between actual and listed')),
                ('sync_status', models.CharField(choices=[('synced', 'Synced'), ('pending', 'Pending Sync'), ('error', 'Sync Error'), ('manual', 'Manual Override')], default='pending', max_length=20)),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Last successful sync', null=True)),
                ('last_sync_error', models.TextField(blank=True, help_text='Error from last sync attempt')),
                ('sync_attempts', models.IntegerField(default=0, help_text='Number of sync attempts since last success')),
                ('manual_override', models.BooleanField(default=False, help_text='Manually override automatic sync')),
                ('override_quantity', models.IntegerField(blank=True, help_text='Manual override quantity', null=True)),
                ('override_reason', models.TextField(blank=True, help_text='Reason for manual override')),
                ('quantity_changes', models.JSONField(blank=True, default=list, help_text='History of quantity changes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='marketplaces.marketplace')),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_records', to='marketplaces.marketplacelisting')),
            ],
            options={
                'db_table': 'marketplace_inventory',
                'ordering': ['marketplace', 'internal_sku'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketplace_order_id', models.CharField(help_text='Order ID from marketplace', max_length=255)),
                ('internal_order_number', models.CharField(help_text='Internal order reference number', max_length=100, unique=True)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=50)),
                ('shipping_address', models.JSONField(default=dict, help_text='Complete shipping address')),
                ('billing_address', models.JSONField(blank=True, default=dict, help_text='Billing address if different from shipping')),
                ('order_items', models.JSONField(default=list, help_text='List of order items with details')),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Order subtotal before tax/shipping', max_digits=10)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10)),
                ('marketplace_fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total fees charged by marketplace', max_digits=10)),
                ('shipping_method', models.CharField(blank=True, help_text='Selected shipping method', max_length=255)),
                ('tracking_number', models.CharField(blank=True, help_text='Shipment tracking number', max_length=255)),
                ('carrier', models.CharField(blank=True, help_text='Shipping carrier', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('error', 'Error')], default='pending', max_length=20)),
                ('marketplace_status', models.CharField(blank=True, help_text='Status on the marketplace', max_length=100)),
                ('ordered_at', models.DateTimeField(help_text='When order was placed')),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('marketplace_data', models.JSONField(blank=True, default=dict, help_text='Raw order data from marketplace')),
                ('notes', models.TextField(blank=True, help_text='Internal notes about the order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced_at', models.DateTimeField(blank=True, help_text='Last sync with marketplace', null=True)),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='marketplaces.marketplace')),
            ],
            options={
                'db_table': 'marketplace_orders',
                'ordering': ['-ordered_at'],
            },
        ),
        migrations.AddIndex(
            model_name='marketplace',
            index=models.Index(fields=['code'], name='marketplace_code_2662e5_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplace',
            index=models.Index(fields=['status'], name='marketplace_status_b4eccf_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplace',
            index=models.Index(fields=['platform_type'], name='marketplace_platfor_75141b_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplace',
            index=models.Index(fields=['last_sync_at'], name='marketplace_last_sy_4c189d_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplacelisting',
            index=models.Index(fields=['marketplace', 'status'], name='marketplace_marketp_e82a32_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplacelisting',
            index=models.Index(fields=['marketplace_sku'], name='marketplace_marketp_7e22a0_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplacelisting',
            index=models.Index(fields=['last_synced_at'], name='marketplace_last_sy_57df93_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketplacelisting',
            unique_together={('marketplace', 'marketplace_listing_id')},
        ),
        migrations.AddIndex(
            model_name='marketplaceinventory',
            index=models.Index(fields=['sync_status'], name='marketplace_sync_st_1fe479_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplaceinventory',
            index=models.Index(fields=['last_sync_at'], name='marketplace_last_sy_02d6a4_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplaceinventory',
            index=models.Index(fields=['internal_sku'], name='marketplace_interna_fe1a8e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketplaceinventory',
            unique_together={('marketplace', 'marketplace_sku')},
        ),
        migrations.AddIndex(
            model_name='marketplaceorder',
            index=models.Index(fields=['marketplace', 'status'], name='marketplace_marketp_f92d96_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplaceorder',
            index=models.Index(fields=['internal_order_number'], name='marketplace_interna_ec603c_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplaceorder',
            index=models.Index(fields=['ordered_at'], name='marketplace_ordered_1c5a95_idx'),
        ),
        migrations.AddIndex(
            model_name='marketplaceorder',
            index=models.Index(fields=['status'], name='marketplace_status_3b9655_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='marketplaceorder',
            unique_together={('marketplace', 'marketplace_order_id')},
        ),
    ]
