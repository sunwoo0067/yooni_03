# Generated by Django 5.1.5 on 2025-07-16 04:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Supplier company name', max_length=255, unique=True)),
                ('code', models.SlugField(help_text='Unique identifier code for the supplier', unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the supplier and their products')),
                ('connector_type', models.CharField(choices=[('api', 'REST API'), ('ftp', 'FTP/SFTP'), ('email', 'Email'), ('webhook', 'Webhook'), ('custom', 'Custom Integration')], default='api', help_text='Type of integration connector', max_length=20)),
                ('api_base_url', models.URLField(blank=True, help_text='Base URL for API connections')),
                ('encrypted_credentials', models.TextField(blank=True, help_text='Encrypted API credentials (API keys, tokens, etc.)')),
                ('connection_settings', models.JSONField(blank=True, default=dict, help_text='Additional connection settings (headers, timeout, etc.)')),
                ('rate_limit_requests', models.IntegerField(default=100, help_text='Maximum requests per rate limit window')),
                ('rate_limit_window', models.IntegerField(default=3600, help_text='Rate limit window in seconds')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('testing', 'Testing')], default='inactive', max_length=20)),
                ('is_auto_sync_enabled', models.BooleanField(default=False, help_text='Enable automatic product synchronization')),
                ('sync_frequency_hours', models.IntegerField(default=24, help_text='Hours between automatic syncs')),
                ('contact_name', models.CharField(blank=True, max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=50)),
                ('website_url', models.URLField(blank=True)),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Last successful synchronization', null=True)),
                ('last_sync_status', models.CharField(blank=True, help_text='Status of the last sync attempt', max_length=50)),
                ('last_sync_error', models.TextField(blank=True, help_text='Error message from last failed sync')),
                ('total_products', models.IntegerField(default=0, help_text='Total number of products from this supplier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suppliers_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_sku', models.CharField(help_text='SKU/ID used by the supplier', max_length=255)),
                ('supplier_name', models.CharField(help_text='Product name from supplier', max_length=500)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=255)),
                ('subcategory', models.CharField(blank=True, max_length=255)),
                ('brand', models.CharField(blank=True, max_length=255)),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, help_text='Cost price from supplier', max_digits=10, null=True)),
                ('msrp', models.DecimalField(blank=True, decimal_places=2, help_text="Manufacturer's suggested retail price", max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', help_text='Currency code (e.g., USD, EUR)', max_length=3)),
                ('quantity_available', models.IntegerField(default=0, help_text='Current available quantity')),
                ('min_order_quantity', models.IntegerField(default=1, help_text='Minimum order quantity')),
                ('lead_time_days', models.IntegerField(blank=True, help_text='Lead time in days for orders', null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, help_text='Weight in kg', max_digits=10, null=True)),
                ('dimensions', models.JSONField(blank=True, default=dict, help_text='Dimensions (length, width, height) in cm')),
                ('supplier_data', models.JSONField(blank=True, default=dict, help_text='Raw data from supplier API')),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Additional product attributes')),
                ('image_urls', models.JSONField(blank=True, default=list, help_text='List of product image URLs')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued'), ('out_of_stock', 'Out of Stock')], default='active', max_length=20)),
                ('last_updated_from_supplier', models.DateTimeField(blank=True, help_text='Last time data was updated from supplier', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='suppliers.supplier')),
            ],
            options={
                'db_table': 'supplier_products',
                'ordering': ['supplier', 'supplier_name'],
            },
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['code'], name='suppliers_code_e95fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['status'], name='suppliers_status_e3c425_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['last_sync_at'], name='suppliers_last_sy_3298a9_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierproduct',
            index=models.Index(fields=['supplier', 'status'], name='supplier_pr_supplie_aa86ee_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierproduct',
            index=models.Index(fields=['supplier_sku'], name='supplier_pr_supplie_fc525a_idx'),
        ),
        migrations.AddIndex(
            model_name='supplierproduct',
            index=models.Index(fields=['last_updated_from_supplier'], name='supplier_pr_last_up_6ca162_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='supplierproduct',
            unique_together={('supplier', 'supplier_sku')},
        ),
    ]
